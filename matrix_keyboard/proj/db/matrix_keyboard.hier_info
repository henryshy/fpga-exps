|matrix_keyboard
clk => key_value[0]~reg0.CLK
clk => key_value[1]~reg0.CLK
clk => key_value[2]~reg0.CLK
clk => key_value[3]~reg0.CLK
clk => key_flag~reg0.CLK
clk => key_press_result_tmp[0].CLK
clk => key_press_result_tmp[1].CLK
clk => key_press_result_tmp[2].CLK
clk => key_press_result_tmp[3].CLK
clk => key_press_result_tmp[4].CLK
clk => key_press_result_tmp[5].CLK
clk => key_press_result_tmp[6].CLK
clk => key_press_result_tmp[7].CLK
clk => key_flag_tmp.CLK
clk => column_out[0].CLK
clk => column_out[1].CLK
clk => column_out[2].CLK
clk => column_out[3].CLK
clk => row_in_buffer[0].CLK
clk => row_in_buffer[1].CLK
clk => row_in_buffer[2].CLK
clk => row_in_buffer[3].CLK
clk => keyboard_column_out[0]~reg0.CLK
clk => keyboard_column_out[1]~reg0.CLK
clk => keyboard_column_out[2]~reg0.CLK
clk => keyboard_column_out[3]~reg0.CLK
clk => cnt2_en.CLK
clk => cnt1_en.CLK
clk => cnt2_done.CLK
clk => counter2[0].CLK
clk => counter2[1].CLK
clk => counter2[2].CLK
clk => counter2[3].CLK
clk => counter2[4].CLK
clk => counter2[5].CLK
clk => counter2[6].CLK
clk => counter2[7].CLK
clk => counter2[8].CLK
clk => counter2[9].CLK
clk => counter2[10].CLK
clk => counter2[11].CLK
clk => counter2[12].CLK
clk => counter2[13].CLK
clk => counter2[14].CLK
clk => counter2[15].CLK
clk => counter2[16].CLK
clk => counter2[17].CLK
clk => counter2[18].CLK
clk => counter2[19].CLK
clk => cnt1_done.CLK
clk => counter1[0].CLK
clk => counter1[1].CLK
clk => counter1[2].CLK
clk => counter1[3].CLK
clk => counter1[4].CLK
clk => counter1[5].CLK
clk => counter1[6].CLK
clk => counter1[7].CLK
clk => counter1[8].CLK
clk => counter1[9].CLK
clk => counter1[10].CLK
clk => counter1[11].CLK
clk => counter1[12].CLK
clk => counter1[13].CLK
clk => counter1[14].CLK
clk => counter1[15].CLK
clk => counter1[16].CLK
clk => counter1[17].CLK
clk => counter1[18].CLK
clk => counter1[19].CLK
clk => state~1.DATAIN
rst_n => key_press_result_tmp[0].ACLR
rst_n => key_press_result_tmp[1].ACLR
rst_n => key_press_result_tmp[2].ACLR
rst_n => key_press_result_tmp[3].ACLR
rst_n => key_press_result_tmp[4].ACLR
rst_n => key_press_result_tmp[5].ACLR
rst_n => key_press_result_tmp[6].ACLR
rst_n => key_press_result_tmp[7].ACLR
rst_n => key_flag_tmp.ACLR
rst_n => column_out[0].ACLR
rst_n => column_out[1].ACLR
rst_n => column_out[2].ACLR
rst_n => column_out[3].ACLR
rst_n => row_in_buffer[0].PRESET
rst_n => row_in_buffer[1].PRESET
rst_n => row_in_buffer[2].PRESET
rst_n => row_in_buffer[3].PRESET
rst_n => keyboard_column_out[0]~reg0.ACLR
rst_n => keyboard_column_out[1]~reg0.ACLR
rst_n => keyboard_column_out[2]~reg0.ACLR
rst_n => keyboard_column_out[3]~reg0.ACLR
rst_n => cnt2_en.ACLR
rst_n => cnt1_en.ACLR
rst_n => key_value[0]~reg0.ACLR
rst_n => key_value[1]~reg0.ACLR
rst_n => key_value[2]~reg0.ACLR
rst_n => key_value[3]~reg0.ACLR
rst_n => key_flag~reg0.ACLR
rst_n => counter1[0].ACLR
rst_n => counter1[1].ACLR
rst_n => counter1[2].ACLR
rst_n => counter1[3].ACLR
rst_n => counter1[4].ACLR
rst_n => counter1[5].ACLR
rst_n => counter1[6].ACLR
rst_n => counter1[7].ACLR
rst_n => counter1[8].ACLR
rst_n => counter1[9].ACLR
rst_n => counter1[10].ACLR
rst_n => counter1[11].ACLR
rst_n => counter1[12].ACLR
rst_n => counter1[13].ACLR
rst_n => counter1[14].ACLR
rst_n => counter1[15].ACLR
rst_n => counter1[16].ACLR
rst_n => counter1[17].ACLR
rst_n => counter1[18].ACLR
rst_n => counter1[19].ACLR
rst_n => cnt1_done.ACLR
rst_n => counter2[0].ACLR
rst_n => counter2[1].ACLR
rst_n => counter2[2].ACLR
rst_n => counter2[3].ACLR
rst_n => counter2[4].ACLR
rst_n => counter2[5].ACLR
rst_n => counter2[6].ACLR
rst_n => counter2[7].ACLR
rst_n => counter2[8].ACLR
rst_n => counter2[9].ACLR
rst_n => counter2[10].ACLR
rst_n => counter2[11].ACLR
rst_n => counter2[12].ACLR
rst_n => counter2[13].ACLR
rst_n => counter2[14].ACLR
rst_n => counter2[15].ACLR
rst_n => counter2[16].ACLR
rst_n => counter2[17].ACLR
rst_n => counter2[18].ACLR
rst_n => counter2[19].ACLR
rst_n => cnt2_done.ACLR
rst_n => state~3.DATAIN
keyboard_row_in[0] => row_in_buffer.DATAA
keyboard_row_in[0] => Equal2.IN3
keyboard_row_in[1] => row_in_buffer.DATAA
keyboard_row_in[1] => Equal2.IN2
keyboard_row_in[2] => row_in_buffer.DATAA
keyboard_row_in[2] => Equal2.IN1
keyboard_row_in[3] => row_in_buffer.DATAA
keyboard_row_in[3] => Equal2.IN0
key_flag <= key_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
keyboard_column_out[0] <= keyboard_column_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
keyboard_column_out[1] <= keyboard_column_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
keyboard_column_out[2] <= keyboard_column_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
keyboard_column_out[3] <= keyboard_column_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[0] <= key_value[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[1] <= key_value[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[2] <= key_value[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value[3] <= key_value[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


