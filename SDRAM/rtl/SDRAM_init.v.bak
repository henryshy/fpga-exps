
module SDRAM_init( //clk 100m 

	CLK,
	RST_N,
	Command,
	saddr,
	init_done,
	


);

	input CLK;
	
	input RST_N;
	
	output reg [3:0]command;
	output reg []saddr;
	output reg init_done;

	
	parameter
		INIT_PRE = 200000,
		tRP      = 3,
		tRFC     = 10,
		tMRD     = 2,
		AUTO_REF = 750,
		WR_PRE   = 2,
		SC_RCD   = 3;

		
	localparam 
		init_PRE_TIME  = INIT_PRE ,
		init_REF_TIME1 = INIT_PRE + tRP ,
		init_REF_TIME2 = INIT_PRE + tRP + tRFC,
		init_LMR_TIME  = INIT_PRE + tRP + tRFC + tRFC ,
		init_END_TIME  = INIT_PRE + tRP + tRFC + tRFC +tMRD ;
		


		
	reg [14:0]init_CNT;
	reg init_DONE;
	
//	always@(posedge CLK or negedge RST_N)
//		if(!RST_N)	

	always@(posedge CLK or negedge RST_N)
		if(!RST_N)
			init_CNT <= 0;
		else if(init_CNT < init_END_TIME)
			init_CNT <= init_CNT + 1;
		else 
			init_CNT <= 0;
	
	
	always@(posedge CLK or negedge RST_N)
		if(!RST_N) begin
			CKE <= 0;
			{CS_N,RAS_N,CAS_N,WE} <= C_NOP;
		end
		else
			case(init_CNT)
				0               : begin
											CKE <= 1;
											{CS_N,RAS_N,CAS_N,WE} <= C_NOP;
										end
									
				init_PRE_TIME   : begin
											{CS_N,RAS_N,CAS_N,WE}
										end
				init_REF_TIME1  :
				init_REF_TIME2  :
				init_LMR_TIME   :
				init_END_TIME   :
				default:;
			endcase

endmodule