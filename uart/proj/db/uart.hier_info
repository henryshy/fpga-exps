|uart_sender
clk => uart_state~reg0.CLK
clk => tx_done~reg0.CLK
clk => tx~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => stable_data[0].CLK
clk => stable_data[1].CLK
clk => stable_data[2].CLK
clk => stable_data[3].CLK
clk => stable_data[4].CLK
clk => stable_data[5].CLK
clk => stable_data[6].CLK
clk => stable_data[7].CLK
rst_n => clock_count[12].OUTPUTSELECT
rst_n => clock_count[11].OUTPUTSELECT
rst_n => clock_count[10].OUTPUTSELECT
rst_n => clock_count[9].OUTPUTSELECT
rst_n => clock_count[8].OUTPUTSELECT
rst_n => clock_count[7].OUTPUTSELECT
rst_n => clock_count[6].OUTPUTSELECT
rst_n => clock_count[5].OUTPUTSELECT
rst_n => clock_count[4].OUTPUTSELECT
rst_n => clock_count[3].OUTPUTSELECT
rst_n => clock_count[2].OUTPUTSELECT
rst_n => clock_count[1].OUTPUTSELECT
rst_n => tx_done~reg0.ACLR
rst_n => tx~reg0.ACLR
rst_n => uart_state~reg0.ACLR
rst_n => stable_data[0].ACLR
rst_n => stable_data[1].ACLR
rst_n => stable_data[2].ACLR
rst_n => stable_data[3].ACLR
rst_n => stable_data[4].ACLR
rst_n => stable_data[5].ACLR
rst_n => stable_data[6].ACLR
rst_n => stable_data[7].ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => bit_cnt[0].PRESET
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => bit_cnt[3].ACLR
rst_n => Equal0.IN12
baud_set[0] => Decoder0.IN2
baud_set[0] => Decoder1.IN1
baud_set[1] => Decoder0.IN1
baud_set[2] => Decoder0.IN0
baud_set[2] => Decoder1.IN0
send_en => bit_cnt.OUTPUTSELECT
send_en => bit_cnt.OUTPUTSELECT
send_en => bit_cnt.OUTPUTSELECT
send_en => bit_cnt.OUTPUTSELECT
send_en => uart_state.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => cnt.OUTPUTSELECT
send_en => stable_data[7].ENA
send_en => stable_data[6].ENA
send_en => stable_data[5].ENA
send_en => stable_data[4].ENA
send_en => stable_data[3].ENA
send_en => stable_data[2].ENA
send_en => stable_data[1].ENA
send_en => stable_data[0].ENA
tx_done << tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => stable_data[0].DATAIN
data[1] => stable_data[1].DATAIN
data[2] => stable_data[2].DATAIN
data[3] => stable_data[3].DATAIN
data[4] => stable_data[4].DATAIN
data[5] => stable_data[5].DATAIN
data[6] => stable_data[6].DATAIN
data[7] => stable_data[7].DATAIN
tx << tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_state << uart_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


